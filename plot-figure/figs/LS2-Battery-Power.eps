%!PS-Adobe-3.0 
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: .\figs\LS2-Battery-Power.eps
%%CreationDate: 04/14/2015  10:30:30
%%DocumentNeededFonts: Helvetica-Bold
%%+ Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:     0     0   931   487
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0000 6048 csm

    0   198 11174  5850 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 11232 6049 rf
6 w
0 4617 8633 0 0 -4617 1531 5071 4 MP
PP
-8633 0 0 4617 8633 0 0 -4617 1531 5071 5 MP stroke
4 w
DO
0 sg
1531 5071 mt 1531  454 L
1531  454 mt 1531  454 L
4408 5071 mt 4408  454 L
4408  454 mt 4408  454 L
7286 5071 mt 7286  454 L
7286  454 mt 7286  454 L
10164 5071 mt 10164  454 L
10164  454 mt 10164  454 L
1531 5071 mt 10164 5071 L
10164 5071 mt 10164 5071 L
1531 3916 mt 10164 3916 L
10164 3916 mt 10164 3916 L
1531 2762 mt 10164 2762 L
10164 2762 mt 10164 2762 L
1531 1608 mt 10164 1608 L
10164 1608 mt 10164 1608 L
1531  454 mt 10164  454 L
10164  454 mt 10164  454 L
SO
6 w
1531  454 mt 10164  454 L
1531 5071 mt 10164 5071 L
10164 5071 mt 10164  454 L
1531 5071 mt 1531  454 L
1531 5071 mt 10164 5071 L
1531 5071 mt 1531  454 L
1531 5071 mt 1531 4984 L
1531  454 mt 1531  540 L
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 360 FMSR

 571 5451 mt 
(04/19 00:00) s
4408 5071 mt 4408 4984 L
4408  454 mt 4408  540 L
3448 5451 mt 
(04/20 00:00) s
7286 5071 mt 7286 4984 L
7286  454 mt 7286  540 L
6326 5451 mt 
(04/21 00:00) s
10164 5071 mt 10164 4984 L
10164  454 mt 10164  540 L
9204 5451 mt 
(04/22 00:00) s
1531 5071 mt 1617 5071 L
10164 5071 mt 10077 5071 L
 486 5209 mt 
(-1000) s
1531 3916 mt 1617 3916 L
10164 3916 mt 10077 3916 L
 686 4054 mt 
(-500) s
1531 2762 mt 1617 2762 L
10164 2762 mt 10077 2762 L
1296 2900 mt 
(0) s
1531 1608 mt 1617 1608 L
10164 1608 mt 10077 1608 L
 896 1746 mt 
(500) s
1531  454 mt 1617  454 L
10164  454 mt 10077  454 L
 696  592 mt 
(1000) s
1531  454 mt 10164  454 L
1531 5071 mt 10164 5071 L
10164 5071 mt 10164  454 L
1531 5071 mt 1531  454 L
gs 1531 454 8634 4618 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
10 -5 10 0 10 -175 10 -656 10 -26 10 -42 10 865 10 40 
10 -4 10 2 10 1 10 2307 10 1 10 1 10 1 10 1 
10 -705 10 -126 10 -13 10 -18 10 -18 10 -2326 10 -36 10 469 
10 461 10 0 10 2 10 2759 10 -50 10 281 10 -2986 10 0 
10 0 10 3 10 1 10 -1 10 -2 10 3 10 -194 10 -634 
10 -28 10 -61 10 918 10 2308 10 1 10 2 10 -548 10 -28 
10 0 10 1 10 2 10 -13 10 12 10 0 10 -2310 10 -1 
10 -120 10 -718 10 1110 10 3278 10 -3267 10 0 10 1 10 -23 
10 1007 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 10 0 10 -654 10 14 
10 -2 10 20 10 10 10 2296 10 3 10 -18 10 -19 10 -13 
10 128 10 -381 10 -2586 10 -25 10 468 10 398 10 -50 10 -56 
10 -1003 10 1073 10 -41 10 74 10 -91 10 2571 10 -3033 10 -299 
10 -186 10 714 10 180 10 51 10 -4 10 9 10 14 10 2281 
10 -16 10 17 10 -10 9 -406 10 -437 10 5 10 523 10 -1887 
10 2 10 -42 10 -104 10 11 10 22 10 25 10 27 10 -225 
10 -444 10 201 10 -306 10 -31 10 548 10 319 10 -2 10 -1 
10 0 10 1 10 0 10 -3 10 -1 10 8 10 -3 10 1589 
10 -120 10 -49 10 858 10 32 10 1 10 -1 10 0 10 -2312 
10 -3 10 8 10 0 10 -1 10 0 10 -801 10 -44 10 -73 
10 917 10 0 10 -1 10 -1 10 -4 10 9 10 -1 10 1 
10 -1 10 -1 10 -2 10 -460 10 -373 10 -33 10 2847 10 326 
10 -7 10 9 10 -1 10 2 10 0 10 -2310 10 0 10 1 
10 -558 10 -277 10 -33 10 580 10 279 10 10 10 1 10 2386 
10 230 10 -966 10 -2288 10 -114 10 -504 10 -10 10 -426 10 1945 
10 -68 10 106 10 2316 10 -2020 10 778 10 -7 10 -3 10 -5 
10 -12 10 -2315 10 -205 10 -625 10 3440 10 -383 10 580 10 -205 
10 11 10 -1591 10 -1 10 0 10 0 10 0 10 -1 10 1 
10 -356 10 -69 10 14 10 414 10 -2 10 -3 10 5 10 0 
10 0 10 -2 10 0 10 1 10 0 10 1 9 -417 10 -13 
10 -20 10 449 10 -1 10 0 10 0 10 0 10 -1 10 2 
10 -1 10 0 10 0 10 1 10 1241 10 -175 10 -33 10 623 
10 254 10 -2 10 1 10 1 10 0 10 -3 10 -2308 10 0 
10 1 10 0 10 -124 10 -707 10 -29 10 261 10 600 10 1 
10 0 10 0 10 0 10 1 10 -2 10 2310 10 2 10 -41 
10 -793 10 -24 10 -54 10 912 10 -1 10 1 10 -1 10 -2309 
10 -1 10 0 10 1 7176 3476 300 MP stroke
10 -2 10 1 10 -1 10 -39 10 -794 10 -25 10 15 10 848 
10 -1 10 -2 10 2 10 2308 10 2 10 0 10 1 10 1 
10 -1 10 -103 10 -727 10 -26 10 103 10 -1554 10 1 10 -1 
10 1 10 -1 10 -2 10 0 10 1 10 -1 10 1 10 -187 
10 -649 10 -27 10 181 10 686 10 2307 10 2 10 1 10 0 
10 -3 10 1 10 -347 10 -273 10 -79 10 -738 10 -28 10 -1 
10 -1467 10 2 10 1 10 -9 10 -3 10 -1 10 0 10 -2 
10 -2 10 -4 10 2680 10 -1236 10 -105 10 -151 10 820 10 364 
10 -5 10 -33 10 -82 10 22 10 -14 10 -6 10 9 9 -31 
10 -91 10 -703 10 -15 10 304 10 -2297 10 -176 10 1056 10 -105 
10 1247 10 -1819 10 2661 10 -203 10 -1886 10 -52 10 -41 10 782 
10 91 10 3 10 -1 10 0 10 -2 10 2310 10 2 10 -1 
10 -3 10 3 10 -209 10 -612 10 -2338 10 413 10 437 10 0 
10 -3 10 3 10 0 10 0 10 -1 10 1 10 0 10 -2 
10 -718 10 -116 10 -11 10 844 10 3 10 1 10 -1 10 -2 
10 0 10 2 10 0 10 -1 10 2309 10 0 10 -440 10 -385 
10 -33 10 623 10 237 10 -3 10 -2308 10 3 10 0 10 -1 
10 0 10 0 10 1 10 -2 10 -767 10 -69 10 36 10 800 
10 -1 10 2 10 -2 10 0 10 1 10 0 10 -1 10 0 
10 0 10 0 10 -613 10 -221 10 2285 10 858 10 -2 10 -1 
10 1 10 0 10 1 10 -2308 10 1 10 1 10 -269 10 -557 
10 -26 10 171 10 678 10 0 10 2 10 -2 10 1 10 -1 
10 1 10 1 10 -1 10 -1 10 1 10 -955 10 -25 10 1591 
10 702 10 342 10 -233 10 -118 10 386 10 -1 10 -56 10 -407 
10 0 10 49 9 -749 10 -19 10 19 10 -1490 10 -5 10 -2 
10 3062 10 -1564 10 -1817 10 77 10 24 10 -25 10 -70 10 -512 
10 1983 10 -41 10 1419 10 -3042 10 3794 10 -718 10 -1959 10 3 
10 1 10 2309 10 -23 10 -806 10 -30 10 281 10 577 10 1 
10 3 10 0 10 -2314 10 1 10 1 10 -367 10 -467 10 -29 
10 -89 10 951 10 0 10 0 10 1 10 1 10 -2 10 2307 
10 3 10 2 10 -1 10 -6 10 -9 10 -544 10 -281 10 -2326 
10 -13 10 -17 10 -22 10 -45 10 717 10 227 10 0 10 -957 
10 3619 10 -2306 10 453 10 630 10 448 10 421 10 8 10 3 
10 2 10 -2 10 -1 10 -2308 10 1 10 0 10 0 10 -41 
10 -793 10 -30 10 202 10 659 10 0 10 0 10 -2 10 1 
10 1 10 0 10 2302 10 8 10 1 10 -780 10 -76 10 33 
10 819 10 7 10 -1 10 2 10 -2307 10 -1 10 1 10 2 
10 0 10 -2 10 -488 4188 3961 300 MP stroke
10 -356 10 -32 10 663 10 215 10 -3 10 1 10 0 10 2 
10 2308 10 3 10 -1 10 -2 10 -597 10 -250 10 -32 10 600 
10 282 10 -3 10 -2311 9 1 10 1 10 0 10 -1 10 -57 
10 1791 10 -171 10 -690 10 -19 10 -7 10 -102 10 -1489 10 24 
10 42 10 -158 10 1547 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 -1599 10 3890 10 -136 10 -26 
10 -1448 10 18 10 -2339 10 0 10 -2 10 174 10 3751 10 -3606 
10 17 10 -102 10 -731 10 3118 10 1149 10 -3177 10 0 10 -84 
10 71 10 2318 10 -62 10 -54 10 40 10 -4 10 -5 10 9 
10 -514 10 -308 10 -29 10 511 10 236 10 -6 10 -2306 10 0 
10 101 10 140 10 6 10 11 10 -161 10 -649 10 -26 10 322 
10 2821 10 -2 10 0 10 3 10 3 10 -6 10 -6 10 8 
10 -674 10 -146 10 -28 10 -1780 10 318 10 -2 10 2 10 0 
10 -2 10 -6 10 -11 10 10 10 9 10 10 10 -8 10 1781 
10 -30 10 410 10 440 10 1 10 0 10 -1 10 -7 10 10 
10 -2309 10 0 10 0 10 -668 10 -171 10 -33 10 637 10 231 
10 1 10 -4 10 -4 10 10 10 -2 10 1 9 2310 10 -4 
10 -298 10 -492 10 -308 10 -18 10 133 10 698 10 -9 10 8 
10 1 10 -2310 10 1 10 0 10 0 10 -3 10 0 10 -2 
10 -193 10 2310 10 194 10 -3179 10 873 10 -3 10 1 10 4 
10 -4 10 2310 10 2 10 -2 10 -1 10 -675 10 -155 10 -27 
10 486 10 361 10 -26 10 -1 10 -2312 10 -1258 10 4431 10 -3187 
10 -161 10 -906 10 654 10 1300 10 -279 10 1502 10 318 10 651 
10 -1671 10 1012 10 139 10 -2334 10 -8 10 -272 10 301 10 55 
10 9 10 -4 10 -421 10 -426 10 -32 10 613 10 265 10 -2 
10 -1 10 2312 10 -2 10 -7 10 7 10 -1 10 -303 10 -548 
10 -17 10 271 10 598 10 -2310 10 1 10 2 10 -4 10 -8 
10 7 10 1 10 -1 10 2 10 -1 10 -765 10 -92 10 77 
10 780 10 2311 10 -2 10 -10 10 8 10 2 10 -15 10 0 
10 1 10 -3015 10 -135 10 -31 10 643 10 244 10 -1 10 -11 
10 13 10 1 10 0 10 -1 10 0 10 0 10 0 10 2208 
10 -737 10 -27 10 90 10 760 10 11 10 2 10 0 10 -1 
10 0 1540 1183 266 MP stroke
gr

36 w
c8
0 sg
5426 5771 mt 
(Time) s
 349 3633 mt  -90 rotate
(Power \(W\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1514 5114 mt 
( ) s
10148  496 mt 
( ) s
6 w
1 sg
0 478 3891 0 0 -478 6214 992 4 MP
PP
-3891 0 0 478 3891 0 0 -478 6214 992 5 MP stroke
4 w
DO
SO
6 w
0 sg
6214  514 mt 10105  514 L
6214  992 mt 10105  992 L
10105  992 mt 10105  514 L
6214  992 mt 6214  514 L
6214  992 mt 10105  992 L
6214  992 mt 6214  514 L
6214  514 mt 10105  514 L
6214  992 mt 10105  992 L
10105  992 mt 10105  514 L
6214  992 mt 6214  514 L
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 360 FMSR

6703  886 mt 
(LS2-Battery-Power) s
gs 6214 514 3892 479 rc
36 w
c8
376 0 6289 753 2 MP stroke
6 w
gr

c8

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%BoundingBox:     0     0   931   487
%%Pages: 001
%%EOF
